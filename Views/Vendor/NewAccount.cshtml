@model SearchProcurement.Models.Vendor
@{
    Layout = "~/Views/Shared/_Account.cshtml";
}

<div class="view-box">
    <h1>Setting up your Vendor Account</h1>

    <p>
        Here you can set up a vendor profile on Procurement Search.  You can use your profile
        to build watch lists of contracts that interest you, set up email alerts, and more.
    </p>

    <p>
        <span class="attention">Please note:  this account is for vendors, small businesses,
        and people who want to gain access to improved search functionality for contracts and
        RFPs.</span>
        If you're a buyer or procurement manager looking to list your contracts and RFPs,
        this is not the place where you'll set up your account.
    </p>

    <form class="pure-form pure-form-stacked" id="account" method="POST" action="/vendor/NewAccount">
    @Html.AntiForgeryToken()

        <fieldset>
            <legend>About You</legend>

            <p><i>Since you're the person setting up the account, we'd like to know a little about you.</i></p>

            <div class="pure-g">
                <div class="pure-u-1 pure-u-md-1-2">
                    <label asp-for="VendorName"></label>
                    <input asp-for="VendorName" class="pure-u-23-24" placeholder="" required data-parsley-errors-messages-disabled="true">
                    <span class="pure-form-message">This is a required field.</span>
                </div>

                <div class="pure-u-1 pure-u-md-1-2">
                    <label asp-for="VendorEmailAddress"></label>
                    <input asp-for="VendorEmailAddress" class="pure-u-23-24" placeholder="" required data-parsley-errors-messages-disabled="true" data-parsley-type="email" data-parsley-remote="/vendor/checkEmail?email={value}">
                    <span class="pure-form-message">This is a required field.</span>
                </div>
            </div>
        </fieldset>

        <fieldset>
            <legend>About Your Business</legend>
            <div class="pure-g">
                <div class="pure-u-1 pure-u-md-1-2">
                    <label asp-for="BusinessName"></label>
                    <input asp-for="BusinessName" class="pure-u-23-24" placeholder="" required data-parsley-errors-messages-disabled="true">
                    <span class="pure-form-message">This is a required field.</span>
                </div>

                <div class="pure-u-1 pure-u-md-1-2">
                    <label asp-for="VendorState"></label>
                    <select class="pure-u-23-24" asp-for="VendorState" asp-items="Model.States"></select>
                </div>
            </div>
        </fieldset>

        <fieldset>
            <legend>Your certifications</legend>
            <p><i>Here you can list any state or federal certifications your business has.</i></p>
            <div id="certs">

            @foreach (var cert in SearchProcurement.Models.Vendor.getPossibleCertifications("AL")) // this menu defaults to Alabama
            {
            <label for="cert-@cert.Id" class="pure-checkbox">
                <input id="cert-@cert.Id" type="checkbox" name="VendorCertifications[]" value="@cert.Id">
                @cert.Name
            </label>
            }
            </div>

        </fieldset>

        <button type="submit" class="pure-button pure-button-primary">Sign Up</button>

    </form>

</div>



<div class="pure-g">
    <div class="pure-u-1 l-box">
        <div class="footnote">

            <div class="pages large-hide">
                <div class="head">Pages</div>
                <ul>
                    @Html.Partial("Pages-menu")
                </ul>
            </div>

            <p class="tip">
                Got questions?  Oh yes you do.
            </p>
        </div>
    </div>
</div>

<script type="text/javascript">
$(function () {

  $('#account').parsley().on('field:validated', function() {
    if (this.validationResult === true) {
      this.$element.nextAll('.pure-form-message').first().removeClass('red');
    } else {
      this.$element.nextAll('.pure-form-message').first().addClass('red');
    }
  })
  .on('form:submit', function() {
    // return false; // Don't submit form for this demo
  });

  $('#VendorState').change(function(){
    $.get("/vendor/getCertsForState?state=" + $('#VendorState').val(), function(data, status){
      // First, let's remove the old state cert list
      $('#certs').empty();
      if( data.length == 0 )
        $('#certs').append("<i>We don't have any certifications registered for your state yet!</i>");
      else
      {
        // Load up the cert data for the state
        $(data).each(function(idx, el) {
          var id = el.id;
          var name = el.name;
          var item = $("<label for=\"cert-" + id + "\" class=\"pure-checkbox\">");
          item.append("<input id=\"cert-" + id + "\" type=\"checkbox\" name=\"VendorCertifications[]\" value=\"" + id + "\">")
          item.append(name);
          $('#certs').append(item);
        });
      }
    });
  });

});

</script>
