@using SearchProcurement.Helpers
@using Microsoft.AspNetCore.Routing

<div class="minisearch">
    <form method="get" action="/search/" role="search">
        <a class="logo" href="/"><img src="/images/logo-sm.png" alt="Home"></a>
        <input name="kw" type="text" title="Search">
        <button type="submit" id="mini-search" class="pure-button button-primary">search</button>
    </form>
</div>


@if (!String.IsNullOrEmpty(ViewBag.agencyHeader))
{
<div class="agency-header" role="complementary">
@Html.Raw(ViewBag.agencyHeader)
</div>
}

<div class="search-options" role="complementary">
    <span class="noselect" id="search-region">Region</span>
    <span class="noselect" id="search-agencies">Agencies</span>
    <span class="noselect" id="search-sortby">Sort by</span>
    <span class="noselect" id="search-show">Show</span>
</div>


<div class="search-results" role="main">
    <p class="head">
        <span class="count">@ViewBag.searchCount RESULTS</span> for @ViewBag.searchString:
    </p>
    <p class="save">
        <a href="">Save this search</a> | Notify with new matching results: <a href="http://blogtrottr.com/?subscribe=@ViewBag.rssUrl/rss/@ViewBag.searchUrlEncoded" target="_blank" title="Get this search delivered by email">Email</a> &nbsp; <a href="/rss/@ViewBag.searchUrl">RSS</a>
    </p>

    <div class="results">
        @foreach (var res in Model.searchResults)
        {
        <div class="item">
            <span class="title"><a href="/details/@res.Id@ViewBag.kwMatch">@res.Title</a></span><br>
            <div class="preview">@res.Description</div>
            <span class="link"><a title="View details for @res.Title" href="/details/@res.Id@ViewBag.kwMatch">View details</a></span> |
            <span class="source"><a title="View all for @res.AgencyName" href="/search?agency=@res.AgencyId">@res.AgencyName</a></span> |
            @if ( res.CloseDate != null )
            {
            <span class="close_date small">Bids Due: @res.CloseDate.ToString("M/d/yyyy")</span>
            }
        </div>
        }
    </div>
</div>

<div class="search-options-overlay" id="region-options">
    Search in region
    <ul>
        <li><a href="http://or.procurementsearch.com/search?@ViewBag.searchUrl">Oregon</a>
        <li>&nbsp;<a class="small" href="http://corvallis.procurementsearch.com/search?@ViewBag.searchUrl">Corvallis</a>
        <li>&nbsp;<a class="small" href="http://eugene.procurementsearch.com/search?@ViewBag.searchUrl">Eugene</a>
        <li>&nbsp;<a class="small" href="http://pdx.procurementsearch.com/search?@ViewBag.searchUrl">Portland</a>
        <li>&nbsp;<a class="small" href="http://salem.procurementsearch.com/search?@ViewBag.searchUrl">Salem</a>
        <li><a href="http://wa.procurementsearch.com/search?@ViewBag.searchUrl">Washington</a>
        <li><a href="http://procurementsearch.com/search?@ViewBag.searchUrl">All regions</a>
    </ul>
</div>

<div class="search-options-overlay" id="agencies-options">
    <b>Show results from</b>:
    <div class="smallpad">
        <div class="parent">
            <div class="options"><b>All agencies</b></div>
            <div class="check"><input type="checkbox" name="agencies[]" value="__all" checked></div>
        </div>
        @foreach (var a in SiteNavHelper.getAgencies(Defines.LocationSettings.myLocationId))
        {
        <div class="parent">
            <div class="options">@a.name</div>
            <div class="check"><input type="checkbox" name="agencies[]" value="@a.agencyId"></div>
        </div>
        }
    </div>
</div>

<div class="search-options-overlay" id="sortby-options">
    <div class="parent">
        <div class="options">Relevance</div>
        @if (ViewBag.urlparams["sortBy"] != "bidsduefirst" && ViewBag.urlparams["sortBy"] != "bidsduelast" ) {
        <div class="check"><i class="fas fa-check-circle"></i></div>
        }
        else
        {
        <div class="check"></div>
        }
    </div>
    <div class="parent">
        <div class="options">Bids Due Date (earliest first)</div>
        @if (ViewBag.urlparams["sortBy"] == "bidsduefirst" ) {
        <div class="check"><i class="fas fa-check-circle"></i></div>
        }
        else
        {
        <div class="check"></div>
        }
    </div>
    <div class="parent">
        <div class="options">Bids Due Date (latest first)</div>
        @if (ViewBag.urlparams["sortBy"] == "bidsduelast" ) {
        <div class="check"><i class="fas fa-check-circle"></i></div>
        }
        else
        {
        <div class="check"></div>
        }
    </div>
</div>

<div class="search-options-overlay" id="show-options">
    <div class="parent">
        <div class="options"><a href="">Open Procurement Opportunities</a></div>
        @if (ViewBag.urlparams["show"] != "closed" ) {
        <div class="check"><i class="fas fa-check-circle"></i></div>
        }
    </div>
    <div class="parent">
        <div class="options"><a href="">Closed Procurement Opportunities</a></div>
        @if (ViewBag.urlparams["show"] == "closed" ) {
        <div class="check"><i class="fas fa-check-circle"></i></div>
        }
    </div>
</div>


<script type="text/javascript">

var change = false;
var showing = "";

function makeClickable(clickable, overlay) {
    // Correctly position the option overlay
    var np = jQuery(clickable);
    var pos = np.offset();
    jQuery(overlay).offset({
      top: pos.top + np.height() + 0,
      left: pos.left
    });

    // and make them clickable
    var el = jQuery(clickable);
    var over = jQuery(overlay);

    // show the overlay
    el.click(function(e){
        if( showing == e.target ) {
            over.hide();
            showing = "";
        } else {
            over.show();
            showing = e.target;
        }
    });

    // and make everything else hideable
    jQuery(document).mouseup(function(e){
        var el = jQuery(overlay);
        console.log(e.target);
        if (!el.is(e.target) && el.has(e.target).length === 0) {
            el.hide();
            if( change )
                alert("Changed - trigger reload");
        }
    });
}

jQuery(document).ready(function(){
    makeClickable('#search-region', '#region-options');
    makeClickable('#search-agencies', '#agencies-options');
    makeClickable('#search-sortby', '#sortby-options');
    makeClickable('#search-show', '#show-options');


    // Wire up the agency limit checkboxes
    jQuery("input[name='agencies[]']").click(function(e){
        var box = jQuery(e.target);

        // if they're toggling the "all" checkbox on, deselect everything else
        if( box[0].value == "__all" ) {
            if( box[0].checked ) {
                jQuery("input[name='agencies[]']").prop("checked", false);
                jQuery(box[0]).prop("checked", true);
            }
        } else {

            // if every other checkbox is unchecked, toggle All back on
            var ct = 0;
            jQuery("input[name='agencies[]']").each(function(idx, el){
                console.log(el);
                if( el.checked )
                    ct++;
            })

            if( ct )
                jQuery("input[name='agencies[]'][value='__all']").prop("checked", false);
            else
                jQuery("input[name='agencies[]'][value='__all']").prop("checked", true);

        }

        change = true;

    });

})
</script>
